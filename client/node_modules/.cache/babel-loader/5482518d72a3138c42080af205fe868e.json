{"ast":null,"code":"import * as firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst config = {\n  apiKey: \"AIzaSyDrVwFmh9KUyJApvxyr6Ap9vj-i9BdxB98\",\n  authDomain: \"clothing-website-db-ed6b9.firebaseapp.com\",\n  databaseURL: \"https://clothing-website-db-ed6b9.firebaseio.com\",\n  projectId: \"clothing-website-db-ed6b9\",\n  storageBucket: \"clothing-website-db-ed6b9.appspot.com\",\n  messagingSenderId: \"669295317787\",\n  appId: \"1:669295317787:web:55f385d04b6267fec3f9be\",\n  measurementId: \"G-2CP1R0SBRJ\"\n};\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`user/${userAuth.uid}`);\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      });\n    } catch (error) {\n      console.log('error creating user', error.message);\n    }\n  }\n\n  return userRef;\n};\nfirebase.initializeApp(config);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["E:/new/clohing-website/src/Firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","snapShot","get","exists","displayName","email","createdAt","Date","set","error","console","log","message","initializeApp","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"AAAA,OAAO,KAAKA,QAAZ,MAA0B,cAA1B;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AAEA,MAAMC,MAAM,GACV;AACEC,EAAAA,MAAM,EAAE,yCADV;AAEEC,EAAAA,UAAU,EAAE,2CAFd;AAGEC,EAAAA,WAAW,EAAE,kDAHf;AAIEC,EAAAA,SAAS,EAAE,2BAJb;AAKEC,EAAAA,aAAa,EAAE,uCALjB;AAMEC,EAAAA,iBAAiB,EAAE,cANrB;AAOEC,EAAAA,KAAK,EAAE,2CAPT;AAQEC,EAAAA,aAAa,EAAE;AARjB,CADF;AAYE,OAAO,MAAMC,yBAAyB,GAAG,OAAQC,QAAR,EAAmBC,cAAnB,KAAsC;AAC7E,MAAI,CAACD,QAAL,EAAe;AAEf,QAAME,OAAO,GAAGC,SAAS,CAACC,GAAV,CAAe,QAAOJ,QAAQ,CAACK,GAAI,EAAnC,CAAhB;AAEA,QAAMC,QAAQ,GAAG,MAAMJ,OAAO,CAACK,GAAR,EAAvB;;AAGA,MAAG,CAACD,QAAQ,CAACE,MAAb,EAAoB;AAClB,UAAM;AAACC,MAAAA,WAAD;AAAcC,MAAAA;AAAd,QAAsBV,QAA5B;AACA,UAAMW,SAAS,GAAG,IAAIC,IAAJ,EAAlB;;AACA,QAAI;AACF,YAAMV,OAAO,CAACW,GAAR,CAAY;AAChBJ,QAAAA,WADgB;AAEhBC,QAAAA,KAFgB;AAGhBC,QAAAA,SAHgB;AAIhB,WAAGV;AAJa,OAAZ,CAAN;AAMD,KAPD,CAQA,OAAOa,KAAP,EAAa;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCF,KAAK,CAACG,OAAzC;AACD;AACF;;AACD,SAAOf,OAAP;AACD,CAxBM;AA0BTb,QAAQ,CAAC6B,aAAT,CAAuB5B,MAAvB;AAEA,OAAO,MAAM6B,IAAI,GAAG9B,QAAQ,CAAC8B,IAAT,EAAb;AACP,OAAO,MAAMhB,SAAS,GAAGd,QAAQ,CAACc,SAAT,EAAlB;AAEP,MAAMiB,QAAQ,GAAG,IAAK/B,QAAQ,CAAC8B,IAAT,CAAcE,kBAAnB,EAAjB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAAEC,EAAAA,MAAM,EAAG;AAAX,CAA7B;AAEA,OAAO,MAAMC,gBAAgB,GAAG,MAAML,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAA/B;AAEP,eAAe/B,QAAf","sourcesContent":["import * as firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nconst config = \n  {\n    apiKey: \"AIzaSyDrVwFmh9KUyJApvxyr6Ap9vj-i9BdxB98\",\n    authDomain: \"clothing-website-db-ed6b9.firebaseapp.com\",\n    databaseURL: \"https://clothing-website-db-ed6b9.firebaseio.com\",\n    projectId: \"clothing-website-db-ed6b9\",\n    storageBucket: \"clothing-website-db-ed6b9.appspot.com\",\n    messagingSenderId: \"669295317787\",\n    appId: \"1:669295317787:web:55f385d04b6267fec3f9be\",\n    measurementId: \"G-2CP1R0SBRJ\"\n  };\n\n  export const createUserProfileDocument = async ( userAuth , additionalData) => {\n    if (!userAuth) return;\n\n    const userRef = firestore.doc(`user/${userAuth.uid}`);\n\n    const snapShot = await userRef.get(); \n\n\n    if(!snapShot.exists){\n      const {displayName, email}= userAuth;\n      const createdAt = new Date();\n      try {\n        await userRef.set({\n          displayName,\n          email,\n          createdAt,\n          ...additionalData \n        }) \n      }\n      catch (error){\n        console.log('error creating user', error.message);\n      }\n    } \n    return userRef;    \n  };\n\nfirebase.initializeApp(config);\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\nconst provider = new  firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({ prompt : 'select_account'}); \n\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\n\nexport default firebase;\n"]},"metadata":{},"sourceType":"module"}
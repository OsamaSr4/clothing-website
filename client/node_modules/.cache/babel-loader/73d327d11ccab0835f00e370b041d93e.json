{"ast":null,"code":"var _jsxFileName = \"E:\\\\new\\\\clohing-website\\\\src\\\\pages\\\\shop\\\\shop.component.jsx\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport { createStructuredSelector } from 'reselect';\nimport { connect } from 'react-redux';\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop.actions';\nimport { selectIsCollectionFetching, selectIsCollectionLoaded } from '../../redux/shop/shop.selectors';\nimport WithSpinner from '../../components/with-spiner/with-spiner.component';\nimport CollectionsOverviewContainer from '../../components/collections-overview/collections-overview.container';\nimport CollectionPage from '../collection/collection.component';\nconst CollectionsPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  UNSAFE_componentWillMount() {}\n\n  componentDidMount() {\n    const {\n      fetchCollectionsStartAsync\n    } = this.props;\n    fetchCollectionsStartAsync();\n  }\n\n  render() {\n    const {\n      match,\n      isCollectionLoaded\n    } = this.props;\n    return React.createElement(\"div\", {\n      className: \"shop-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      component: CollectionsOverviewContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      render: props => React.createElement(CollectionsPageWithSpinner, Object.assign({\n        isLoading: !isCollectionLoaded\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  isCollectionLoaded: selectIsCollectionLoaded\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["E:/new/clohing-website/src/pages/shop/shop.component.jsx"],"names":["React","Route","createStructuredSelector","connect","fetchCollectionsStartAsync","selectIsCollectionFetching","selectIsCollectionLoaded","WithSpinner","CollectionsOverviewContainer","CollectionPage","CollectionsPageWithSpinner","ShopPage","Component","UNSAFE_componentWillMount","componentDidMount","props","render","match","isCollectionLoaded","path","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,0BAAT,QAA2C,+BAA3C;AACA,SAASC,0BAAT,EAAqCC,wBAArC,QAAqE,iCAArE;AAEA,OAAOC,WAAP,MAAwB,oDAAxB;AAGA,OAAOC,4BAAP,MAAyC,sEAAzC;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AAKA,MAAMC,0BAA0B,GAAGH,WAAW,CAACE,cAAD,CAA9C;;AAGA,MAAME,QAAN,SAAuBX,KAAK,CAACY,SAA7B,CAAuC;AACrCC,EAAAA,yBAAyB,GAAG,CAE3B;;AAIDC,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAEV,MAAAA;AAAF,QAAiC,KAAKW,KAA5C;AACAX,IAAAA,0BAA0B;AAC3B;;AAEDY,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,KAAF;AAAUC,MAAAA;AAAV,QAAiC,KAAKH,KAA5C;AAEA,WACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAEE,KAAK,CAACE,IAAK,EAAjC;AACA,MAAA,SAAS,EAAGX,4BADZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAIE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAG,GAAES,KAAK,CAACE,IAAK,gBAA3B;AACE,MAAA,MAAM,EAAGJ,KAAK,IACZ,oBAAC,0BAAD;AACE,QAAA,SAAS,EAAE,CAACG;AADd,SAEMH,KAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CADF;AAcD;;AA7BoC;;AAgCvC,MAAMK,eAAe,GAAGlB,wBAAwB,CAAC;AAE/CgB,EAAAA,kBAAkB,EAAEZ;AAF2B,CAAD,CAAhD;;AAOA,MAAMe,kBAAkB,GAAGC,QAAQ,KAAK;AACtClB,EAAAA,0BAA0B,EAAE,MAAMkB,QAAQ,CAAClB,0BAA0B,EAA3B;AADJ,CAAL,CAAnC;;AAGA,eAAeD,OAAO,CAACiB,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CV,QAA7C,CAAf","sourcesContent":["import React from 'react';\nimport { Route } from 'react-router-dom';\nimport { createStructuredSelector } from 'reselect';\nimport { connect } from 'react-redux'\n\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop.actions';\nimport { selectIsCollectionFetching, selectIsCollectionLoaded } from '../../redux/shop/shop.selectors';\n\nimport WithSpinner from '../../components/with-spiner/with-spiner.component';\n\n\nimport CollectionsOverviewContainer from '../../components/collections-overview/collections-overview.container';\nimport CollectionPage from '../collection/collection.component';\n\n\n\n\nconst CollectionsPageWithSpinner = WithSpinner(CollectionPage);\n\n\nclass ShopPage extends React.Component {\n  UNSAFE_componentWillMount() {\n\n  }\n\n\n\n  componentDidMount() {\n    const { fetchCollectionsStartAsync } = this.props;\n    fetchCollectionsStartAsync();\n  }\n\n  render() {\n    const { match,  isCollectionLoaded } = this.props;\n\n    return (\n      <div className='shop-page'>\n        <Route exact path={`${match.path}`}\n        component= {CollectionsOverviewContainer}\n         />\n        <Route path={`${match.path}/:collectionId`}\n          render={(props =>\n            <CollectionsPageWithSpinner\n              isLoading={!isCollectionLoaded}\n              {...props} \n              />\n          )} />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = createStructuredSelector({\n\n  isCollectionLoaded: selectIsCollectionLoaded\n})\n\n\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);\n"]},"metadata":{},"sourceType":"module"}